//document.addEventListener('turbolinks:load', function() {
$(document).ready(function() {

  // Provinces
  function provinceFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };
  function provinceFormatSelection(item) {
    //document.getElementById("area_province_code").value = item.terytId;
    //document.getElementById("area_province_name").value = item.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_provinces').select2({
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/provinces.json",
      url: "/teryt/provinces_select2_index.json",
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 16,
          page: 1
        }
      },
      // results: function(data, page) {
      //   return { results: data, more: false };
      // }
      results: function(data, page) {
        //var more = (page * 10) < data.meta.totalCount;
        //return { results: data, more: false };
        //var more = (page * 16) < data.total_count;
        var more = (page * 16) < data.meta.total_count;
        var provinces = $.map(data.provinces, function(province, i) {
          return { data_obj: province, id: province.id, text: province.name };
        });
        return { results: provinces, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    formatResult: provinceFormatResult, // omitted for brevity, see the source of this page
    formatSelection: provinceFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    //$("#yourSelector").select2("data", { id: 1, text: "Some Text" });
    $("#district_id_select").select2("val", "")
    $("#district_id_select").select2("readonly", false);
    $("#commune_id_select").select2("val", "")
    $("#commune_id_select").select2("readonly", true);
    document.getElementById("id_submit_button").disabled = true; 
  });


  // ProvinceDistricts
  function districtFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };
  function districtFormatSelection(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_province_districts').select2({
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/province_districts.json",
      url: "/teryt/province_districts_select2_index.json",
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 50,
          page: page,
          province_id: $("#province_id_select").select2("val")
        }
      },
      results: function(data, page) {
        var more = (page * 50) < data.meta.total_count;
        var districts = $.map(data.districts, function(district, i) {
          return { data_obj: district, id: district.id, text: district.name };
        });
        return { results: districts, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    formatResult: districtFormatResult, // omitted for brevity, see the source of this page
    formatSelection: districtFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    //$("#yourSelector").select2("data", { id: 1, text: "Some Text" });
    $("#commune_id_select").select2("val", "")
    $("#commune_id_select").select2("readonly", false);
    document.getElementById("id_submit_button").disabled = true; 
  });



  // DistrictCommunes
  function communeFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };
  function communeFormatSelection(item) {
    //document.getElementById("area_commune_code").value = item.code;
    //document.getElementById("area_commune_name").value = item.name;
    //document.getElementById("area_commune_type_code").value = item.type.code;
    //document.getElementById("area_commune_type_name").value = item.type.name;
    document.getElementById("area_teryt").value = item.data_obj.terytId;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_district_communes').select2({ 
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/district_communes.json",
      url: "/teryt/district_communes_select2_index.json",
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 50,
          page: page,
          district_id: $("#district_id_select").select2("val")
        };
      },
      results: function(data, page) {
        var more = (page * 50) < data.meta.total_count;
        var communes = $.map(data.communes, function(commune, i) {
          return { data_obj: commune, id: commune.id, text: commune.name };
        });
        return { results: communes, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    formatResult: communeFormatResult, // omitted for brevity, see the source of this page
    formatSelection: communeFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    document.getElementById("id_submit_button").disabled = false; 
  })

});

